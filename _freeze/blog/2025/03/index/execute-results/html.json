{
  "hash": "b63043fc12364254c47847d961ee6bf2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"hierarchical clustering algorithms\"\ndate: 3/6/2025\ndescription: \"methods and a practical use case\"\nformat:\n  html:\n    css: styles.css\n    code-fold: true\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: false\n    code-block-border-left: true\n# doi: \ncitation: true\ndraft: true\n---\n\n\n\n\n\n## cluster analysis \n\nThe goal of cluster analysis is to find groups in the data. Sometimes groups are naturally present in the data, and sometimes they are artificially created. These groups are called clusters and the analyst tries to discover them using statistical techniques. Cluster analysis establishes the groups to which several data points belong. It does not assign objects to groups that have been defined in advance.\n\nThe data are organized in tabular form in one of two ways. The first places each object in a row and each measured attribute in a column. Think of a group of people and their heights, weights, and ages. Each row represents a person, and the columns show their measurements. This is called an *n-by-p* matrix.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/data_matrix.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\nThe second places the objects in columns and rows. This is called a *n-by-n* matrix. Think of a group of cities for which we want to compare driving distances. Each city would be assigned a row and a column, and the intersection of the row and column would contain the driving distance between the two cities. \n\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/one_mode.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\nBefore the clusters are identified, the data needs to be transformed to make them suitable for cluster analysis. Why? Because depending on the units of our measurements,the grouping may be different. For example, if we have a data set with the heights of people in centimeters and weights in kilograms, the clustering may be different than if we had the heights in inches and weights in pounds.\n\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_8ohn8fe279wb8bf2j4zg(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_8ohn8fe279wb8bf2j4zg\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_8ohn8fe279wb8bf2j4zg');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_8ohn8fe279wb8bf2j4zg(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_8ohn8fe279wb8bf2j4zg\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 5, j: 0 },  ], css_id: 'tinytable_css_zuxz9a7s6gphutd7ze66',}, \n          { positions: [ { i: 0, j: 2 },  ], css_id: 'tinytable_css_xevh7bcju25w5prulys2',}, \n          { positions: [ { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 },  ], css_id: 'tinytable_css_soefabl2pok8vld2ti96',}, \n          { positions: [ { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 4, j: 0 },  ], css_id: 'tinytable_css_jrm2bcy7k4fz0k7t5xjf',}, \n          { positions: [ { i: 0, j: 1 },  ], css_id: 'tinytable_css_ijhwftu0f9hlz4r5akiw',}, \n          { positions: [ { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 4, j: 1 },  ], css_id: 'tinytable_css_ii764s6clbs0p0320jg2',}, \n          { positions: [ { i: 5, j: 2 },  ], css_id: 'tinytable_css_di9heiwfde3yy70e02so',}, \n          { positions: [ { i: 5, j: 1 },  ], css_id: 'tinytable_css_dffevcrr271oeljyeap0',}, \n          { positions: [ { i: 0, j: 0 },  ], css_id: 'tinytable_css_5nyxrghnki5m897uktor',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_8ohn8fe279wb8bf2j4zg(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_zuxz9a7s6gphutd7ze66, .table th.tinytable_css_zuxz9a7s6gphutd7ze66 { text-align: left; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_xevh7bcju25w5prulys2, .table th.tinytable_css_xevh7bcju25w5prulys2 { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_soefabl2pok8vld2ti96, .table th.tinytable_css_soefabl2pok8vld2ti96 { text-align: center; padding-bottom: 0.1em; }\n      .table td.tinytable_css_jrm2bcy7k4fz0k7t5xjf, .table th.tinytable_css_jrm2bcy7k4fz0k7t5xjf { text-align: left; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_ijhwftu0f9hlz4r5akiw, .table th.tinytable_css_ijhwftu0f9hlz4r5akiw { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_ii764s6clbs0p0320jg2, .table th.tinytable_css_ii764s6clbs0p0320jg2 { text-align: center; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_di9heiwfde3yy70e02so, .table th.tinytable_css_di9heiwfde3yy70e02so { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_dffevcrr271oeljyeap0, .table th.tinytable_css_dffevcrr271oeljyeap0 { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_5nyxrghnki5m897uktor, .table th.tinytable_css_5nyxrghnki5m897uktor { text-align: left; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_8ohn8fe279wb8bf2j4zg\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Weight and Height of Five People, expressed in Kilograms and Centimeters</caption>\n              <tr>\n                <th scope=\"col\">Name</th>\n                <th scope=\"col\">Weight</th>\n                <th scope=\"col\">Height</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>Alice  </td>\n                  <td>15</td>\n                  <td>95 </td>\n                </tr>\n                <tr>\n                  <td>Bob    </td>\n                  <td>49</td>\n                  <td>160</td>\n                </tr>\n                <tr>\n                  <td>Charlie</td>\n                  <td>13</td>\n                  <td>90 </td>\n                </tr>\n                <tr>\n                  <td>Diana  </td>\n                  <td>45</td>\n                  <td>160</td>\n                </tr>\n                <tr>\n                  <td>Eve    </td>\n                  <td>85</td>\n                  <td>180</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n::: {.cell layout-align=\"center\"}\n\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](img/plot1.png){fig-align='center' width=100%}\n:::\n:::\n\n\n\n> The programs (together with their sources and the data sets used in\nthe book) are available on floppy disks by writing to the authors.\n\n\n## r packages\n\n`cluster`\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}