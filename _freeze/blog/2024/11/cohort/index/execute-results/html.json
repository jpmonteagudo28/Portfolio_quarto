{
  "hash": "643382f531e8c992ef02d27e290a50fb",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"the cohort component method of population projection\"\ndate: now\ndescription: \"basics components\"\nformat:\n  html:\n    css: styles.css\n    code-fold: true\n    code-tools: true\n    code-overflow: wrap\n    code-line-numbers: false\n#doi: \ncitation: true\ndraft: true\nlightbox: true\n---\n\n\n\n\n\n## general observations regarding population growth models\n\nModels are useful in the absence of complete data or in the presence of overwhelming data. If data sources are lacking, the model would fill in the gaps to map out a population trajectory despite the holes. If data is overflowing, models help us make sense of it by simplifying and systematizing a reality that's much too complex and “random” to be properly understood. \n\nModels are abstract and approximate (sometimes good) representations of real world phenomena. \n\n## different frameworks\n\nPopulation projections use certain assumptions that are held constant or may change to indicate future trends. Population forecasts use previous and current data to estimate growth with a level of confidence. \n\n## data to take into account\n\n* These three variables encapsulate the carrying capacity, the rate at which a population increases is proportional to the total space available.   \n\n    1. Population density - determines growth rate (density dependency)  \n    2. Total population - determines land area occupied  \n    3. Land area - allows for density calculation  \n    \n## exponential model\n\nAssumes unlimited resources (including spatial resources) and no competition among members of the population, therefore, under this model, population projection will increase over time for positive growth rates.\n\n$$\n\\begin{split}\nP_{t} = N_{0}(1 - r)^{t} \\\\ \\\\\n\\text{or} \\\\ \\\\\nP_{t} = N_{0}e^{rt} \\\\ \\\\\n\\text{and the growth rate can be calculated:} \\\\ \\\\\nr = P^\\frac{1}{t} -1 \\\\ \\\\\n\\text{assuming constant growth year by year}\n\\end{split}\n$$\n\n\n## logistic model\n\nIn the logistic model, limited resources and competition are present which leads to the population reaching a peak, its carrying capacity $K$, and stabilizing or decreasing after that point. The rate of change $\\frac{dy}{dt}$ is proportional to the product of the current population $P_{t}$ and $K - P_{t}$, the difference between the carrying capacity and the current population.\n\nThe logistic model may be a realistic model only for periods of time of a few decades, but it begins to break down for longer periods of time. \n\n$$\n\\begin{split}\n\\frac{dP_{t}}{dt} = rP_{t}(1 - P_{t}/K) \\\\ \\\\\n\\text{after integration and a little algebra, we get} \\\\ \\\\\nP_{t} = \\frac{K}{1 + N_{0}e^{-rt}}\n\\end{split}\n$$\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n\ncalc_pop_growth <- function(){\n  \nN = seq(25618349,45965168,length.out = 20)\nr = 2.18\nt = seq(2010,2030, by = 1)\nK = numeric(length(N))\nP = numeric(length(N))\n\nP[1] <- N[1]  # Start with the first element in N\n\n  for (i in 2:length(N)) {  \n    \n    \n    K[i] <- N[i-1] * (1 + P[i-1] * exp(-r * t[i]))\n    P[i] <- K[i] / (1 + N[i] * exp(-r * t[i]))  # Calculate the population based on the previous K value\n  }\n  \n  return(P)\n}\n\nx <- seq(2010,2030, length.out = 20)\ny <- round(calc_pop_growth()/100000, digits = 0)\n\npar(bg = \"#f9f9f9\", family = \"serif\")\nplot.new()\nplot.window(xlim = range(x), ylim = range(pretty(y)))\n\npoints(x,y,col = \"#e7575a\", pch = 20, cex = .9)\n\naxis(1, at = seq(x[1],x[length(x)], by = 5), labels = round(seq(x[1],x[length(x)], by = 5)), \n     cex.axis = 0.87, tcl = 0.05, lwd = 0.5)\naxis(2,lwd = 0.5,tcl = 0.05, las = 2, cex.axis = 0.87)\ntitle(\"Ficticious Population Growth \\nin Hundreds of Thousands\", adj = 0, col.main = \"#121b3c\")\ntext(\"Logistic growth model showing a \\nconstant growth rate and population \\nincrease by the year 2030. The model assumes all \\npopulations have an unkown carrying capacity \\nthat will impact its growth trajectory\",x = 2010,y = 440, adj = 0, col = \"gray50\")\ntext(\"Initial point at which population count \\nbegins. Pay attention to the invisible \\ncurved line highlihgting the non-linear \\ngrowth.\", x = 2011, y = 285, adj = 0.25, cex = .75,col = \"gray50\")\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n::: {.cell-output-display}\n![](logistic_growth.png){fig-align='center' width=90%}\n:::\n:::\n\n\n## machine learning models\n\nML models are adaptable and flexible but require high quality data for accurate predictions. On top of this, they can handle complex relationships (non-linear), and can identify intricate patterns by iterating through the data $n$ number of times. \n\n## bayesian hierarchical models\n\nR packages available to implement these methods are `bayesLife`, `bayesTFR`, `bayesDems`, and `bayesm`. \n\n## cohort-component model\n\nAs a projection tool, the cohort component method assumes the components of demographic change: mortality, fertility and migration, will remain constant throughout the projection period. As a forecasting tool, the vital statistics can be altered to reflect several population trajectories. \n\nThis method has become the primary model of population projection and forecasting; however, within the last two decades demographers have begun to explore\nalternatives to the standard model, such as the addition of feedbacks, socioeconomic\nand environmental variables, and stochastic inputs (with confidence\nintervals on outputs).\n\n### challenges\n\nThis model faces quite a number of challenges. It assumes fertility, mortality and migration are unaffected by socioeconomic factors. There are no feedbacks from population size and structure of its basic inputs. It is a demographically self-contained projection model; nothing outside its three indicators is able to change it, even in the face of extreme developments. Lastly, it assumes continuity in fertility, mortality and migration patterns - the current rates today will decrease or increase by x year. \n\n### suggestions\n\nWhen this method is used for projection, the best route is to conduct two separate projections, each spanning five years instead of one 10 yr projection. The result of the first projection will be used as input for the second projection\n\n### collect the data\n\nThis method requires information from the most recent and previous census. You'll need the number of births during the past 10 yrs by the age of the mother and thus calculate age-specific fertility rates, which will then be used to predict number of births in the second iteration. When the age of the mother is not available, use general fertility rates. You'll also need survival rates from life tables.\n\n### age a population into the future\n\nTake each age group of the population and *age* it over time using survival rates. \n\n* get the census information distributed by age and sex  \n* multiply base census population of a given age group by survival rates to obtain the\n    population still alive 5 years later.   \n\n\n### add births\n\nCalculate the number of births taking place during the projection interval. Age-specific fertility rates are used to estimate the number of births. The birth rates are multiplied by the number of women in their **reproductive years**. This multiplication will yield the annual number of expected births. Multiply them by the projection period to obtain the total number of births that take place in the future.\n\nUse the following equation to find the number of male and female babies:\n\n$$\n\\begin{split}\np(M) = \\frac{\\text{sex ratio of males ages}_{0-4}}{\\text{sex ratio of females ages}_{0-4} + 100}\\\\ \\\\\np(F) = 1- p(M) \\\\ \\\\\n\\text{surviving males} = \\text{male births} \\times\\text{survival rate} \\\\ \\\\\n\\end{split}\n$$\n\nThen add the net migrations, which can be positive or negative. First, calculate the net migration rate, then multiply these rates by the survived population to obtain the number of net migrants.\n\n## example\n\nLet's assume that the Virginia Department of Social Services(VADHS)  wants to develop a plan for a woman's center in one of its major counties. The goal is to project the number of women for the district from 2024 - 2029.\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nage_2024 <- c(\n              \"00-05\",\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\",\n              \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \"65-69\",\n              \"70-74\", \"75-79\", \"80+\")\n\nage_2029 <- c(\n              \"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\",\n              \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n              \"65-69\", \"70-74\", \"75-79\", \"80-84\", \"85+\"\n)\n\ncensus_2024 <- c(\n  NA,3837,3006,2632,2648,3478,4022,4091,\n  3823,3474,2648,1706,1341,1155,1180,1139,951,827\n)\n\nsurvival_rate<- c(\n  0.9809,0.9904,0.9934,0.9976,0.996,0.9938,0.9916,0.987,0.9795,\n  0.9673,0.9512,0.9322,0.9036,0.8653,0.8165,0.7505,0.6634,0.5426\n)\n\nsurvived_population <- c(\n  NA,3763.71,2986.16,2625.68,2637.41,3456.44,3988.22,4037.82,3744.63,\n3360.40,2518.78,1590.33,1211.73,999.42,963.47,854.82,630.89,448.73\n)\n\nfake_census_data <- data.frame(\n                               age_2024,\n                               age_2029,\n                               census_2024,\n                               survival_rate, \n                               survived_population\n                               ) |>\n  tt(digits = 3,\n     caption = \"Projecting the Population of Females for 2029\",\n     theme = \"spacing\"\n    ) |>\n  style_tt(align = \"c\",\n           boostrap_class = \"table table-hover\")\n\n  colnames(fake_census_data) <- c(\"Age in 2024\",\"Age in 2029\",\n                                  \"Census 2024\",\"Survival Rate\",\n                                  \"Survived Population(c3 * c4)\")\n\nfake_census_data\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_8ohn8fe279wb8bf2j4zg(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_8ohn8fe279wb8bf2j4zg\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_8ohn8fe279wb8bf2j4zg');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_8ohn8fe279wb8bf2j4zg(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_8ohn8fe279wb8bf2j4zg\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 18, j: 1 }, { i: 18, j: 2 }, { i: 18, j: 0 }, { i: 18, j: 3 },  ], css_id: 'tinytable_css_zuxz9a7s6gphutd7ze66',}, \n          { positions: [ { i: 3, j: 0 }, { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 7, j: 0 }, { i: 4, j: 0 }, { i: 9, j: 0 }, { i: 10, j: 0 }, { i: 11, j: 0 }, { i: 8, j: 0 }, { i: 13, j: 0 }, { i: 14, j: 0 }, { i: 15, j: 0 }, { i: 16, j: 0 }, { i: 17, j: 0 }, { i: 5, j: 0 }, { i: 6, j: 0 }, { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 4, j: 1 }, { i: 5, j: 1 }, { i: 12, j: 0 }, { i: 7, j: 1 }, { i: 8, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 }, { i: 12, j: 1 }, { i: 13, j: 1 }, { i: 14, j: 1 }, { i: 15, j: 1 }, { i: 16, j: 1 }, { i: 17, j: 1 }, { i: 12, j: 2 }, { i: 6, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 7, j: 2 }, { i: 8, j: 2 }, { i: 9, j: 2 }, { i: 10, j: 2 }, { i: 11, j: 2 }, { i: 6, j: 3 }, { i: 13, j: 2 }, { i: 14, j: 2 }, { i: 15, j: 2 }, { i: 16, j: 2 }, { i: 17, j: 2 }, { i: 12, j: 3 }, { i: 13, j: 3 }, { i: 1, j: 3 }, { i: 2, j: 3 }, { i: 3, j: 3 }, { i: 4, j: 3 }, { i: 5, j: 3 }, { i: 10, j: 3 }, { i: 7, j: 3 }, { i: 8, j: 3 }, { i: 9, j: 3 }, { i: 14, j: 3 }, { i: 11, j: 3 }, { i: 16, j: 3 }, { i: 17, j: 3 }, { i: 15, j: 3 },  ], css_id: 'tinytable_css_jrm2bcy7k4fz0k7t5xjf',}, \n          { positions: [ { i: 0, j: 4 },  ], css_id: 'tinytable_css_ijhwftu0f9hlz4r5akiw',}, \n          { positions: [ { i: 1, j: 4 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 4, j: 4 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 7, j: 4 }, { i: 8, j: 4 }, { i: 9, j: 4 }, { i: 10, j: 4 }, { i: 11, j: 4 }, { i: 12, j: 4 }, { i: 13, j: 4 }, { i: 14, j: 4 }, { i: 15, j: 4 }, { i: 16, j: 4 }, { i: 17, j: 4 },  ], css_id: 'tinytable_css_ii764s6clbs0p0320jg2',}, \n          { positions: [ { i: 18, j: 4 },  ], css_id: 'tinytable_css_dffevcrr271oeljyeap0',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 3 }, { i: 0, j: 1 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_5nyxrghnki5m897uktor',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_8ohn8fe279wb8bf2j4zg(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_zuxz9a7s6gphutd7ze66, .table th.tinytable_css_zuxz9a7s6gphutd7ze66 { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_jrm2bcy7k4fz0k7t5xjf, .table th.tinytable_css_jrm2bcy7k4fz0k7t5xjf { text-align: center; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_ijhwftu0f9hlz4r5akiw, .table th.tinytable_css_ijhwftu0f9hlz4r5akiw { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_ii764s6clbs0p0320jg2, .table th.tinytable_css_ii764s6clbs0p0320jg2 { text-align: center; padding-bottom: 0.1em; }\n      .table td.tinytable_css_dffevcrr271oeljyeap0, .table th.tinytable_css_dffevcrr271oeljyeap0 { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_5nyxrghnki5m897uktor, .table th.tinytable_css_5nyxrghnki5m897uktor { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_8ohn8fe279wb8bf2j4zg\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Projecting the Population of Females for 2029</caption>\n              <tr>\n                <th scope=\"col\">Age in 2024</th>\n                <th scope=\"col\">Age in 2029</th>\n                <th scope=\"col\">Census 2024</th>\n                <th scope=\"col\">Survival Rate</th>\n                <th scope=\"col\">Survived Population(c3 * c4)</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>00-05</td>\n                  <td>0-4  </td>\n                  <td>    </td>\n                  <td>0.981</td>\n                  <td>    </td>\n                </tr>\n                <tr>\n                  <td>0-4  </td>\n                  <td>5-9  </td>\n                  <td>3837</td>\n                  <td>0.99 </td>\n                  <td>3764</td>\n                </tr>\n                <tr>\n                  <td>5-9  </td>\n                  <td>10-14</td>\n                  <td>3006</td>\n                  <td>0.993</td>\n                  <td>2986</td>\n                </tr>\n                <tr>\n                  <td>10-14</td>\n                  <td>15-19</td>\n                  <td>2632</td>\n                  <td>0.998</td>\n                  <td>2626</td>\n                </tr>\n                <tr>\n                  <td>15-19</td>\n                  <td>20-24</td>\n                  <td>2648</td>\n                  <td>0.996</td>\n                  <td>2637</td>\n                </tr>\n                <tr>\n                  <td>20-24</td>\n                  <td>25-29</td>\n                  <td>3478</td>\n                  <td>0.994</td>\n                  <td>3456</td>\n                </tr>\n                <tr>\n                  <td>25-29</td>\n                  <td>30-34</td>\n                  <td>4022</td>\n                  <td>0.992</td>\n                  <td>3988</td>\n                </tr>\n                <tr>\n                  <td>30-34</td>\n                  <td>35-39</td>\n                  <td>4091</td>\n                  <td>0.987</td>\n                  <td>4038</td>\n                </tr>\n                <tr>\n                  <td>35-39</td>\n                  <td>40-44</td>\n                  <td>3823</td>\n                  <td>0.98 </td>\n                  <td>3745</td>\n                </tr>\n                <tr>\n                  <td>40-44</td>\n                  <td>45-49</td>\n                  <td>3474</td>\n                  <td>0.967</td>\n                  <td>3360</td>\n                </tr>\n                <tr>\n                  <td>45-49</td>\n                  <td>50-54</td>\n                  <td>2648</td>\n                  <td>0.951</td>\n                  <td>2519</td>\n                </tr>\n                <tr>\n                  <td>50-54</td>\n                  <td>55-59</td>\n                  <td>1706</td>\n                  <td>0.932</td>\n                  <td>1590</td>\n                </tr>\n                <tr>\n                  <td>55-59</td>\n                  <td>60-64</td>\n                  <td>1341</td>\n                  <td>0.904</td>\n                  <td>1212</td>\n                </tr>\n                <tr>\n                  <td>60-64</td>\n                  <td>65-69</td>\n                  <td>1155</td>\n                  <td>0.865</td>\n                  <td>999 </td>\n                </tr>\n                <tr>\n                  <td>65-69</td>\n                  <td>70-74</td>\n                  <td>1180</td>\n                  <td>0.816</td>\n                  <td>963 </td>\n                </tr>\n                <tr>\n                  <td>70-74</td>\n                  <td>75-79</td>\n                  <td>1139</td>\n                  <td>0.75 </td>\n                  <td>855 </td>\n                </tr>\n                <tr>\n                  <td>75-79</td>\n                  <td>80-84</td>\n                  <td>951 </td>\n                  <td>0.663</td>\n                  <td>631 </td>\n                </tr>\n                <tr>\n                  <td>80+  </td>\n                  <td>85+  </td>\n                  <td>827 </td>\n                  <td>0.543</td>\n                  <td>449 </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nThe first column shows the births that took place from 2024 - 2029 and the age of the girls in 2029 is found in column 2. The total number of girls by age groups is provided in column 3 and column 4 displays the survival rate for each age group. To find the number of women who survived until 2029 we simply *multiply the survival rate in column 4 by the total number of girls/women in column 3*. \n\nThen we need to *add the number of births taking place during this five year period*. So we first calculate the **age-specific fertility rates** using number of births by age for prior years before the last census. And remember, we're only interested in women of reproductive age. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n ages <- c(\n            \"15-19\", \"20-24\", \"25-29\", \"30-34\",\n            \"35-39\", \"40-44\"\n )\n\nbirths_2024 <- c(\n             324,472,427,258,102,10\n)\n\nbirths_2025 <- c(\n  273,442,411,250,93,9\n)\n\nbirths_2026 <- c(\n  302,457, 416, 274, 74,14\n)\n\nbirths_average <- (births_2024 + births_2025 + births_2026)/3\n\nwomen <- c(\n  2648, 3478,4022,4091,3823,3474\n)\n\nasfr <- births_average/women\n\nsurvived_women <- c(\n  2637.4, 3456.4,3988.2,4037.8,3744.6,3360\n)\n\nannual_births <- asfr * survived_women\n\nfake_birth_data <- data.frame(\n                              ages,\n                              births_2024,\n                              births_2025,\n                             births_2026,\n                             births_average,\n                             women,\n                              asfr,\n                              survived_women,\n                             annual_births\n                    ) |> \n  tt( digits = 3,\n      theme = \"spacing\",\n      caption = \"Calculating Births\"\n      ) |>\n  style_tt(aling = \"c\",\n           bootstrap_class = \"table table-hover\")\n                  \n                  \n  colnames(fake_birth_data) <- c(\"Ages\",\n                         \"Births in 2024\",\n                          \"Births in 2025\",\n                         \"Births in 2026\",\n                         \"Average number of births\",\n                         \"Women Census 2024\",\n                          \"Age Specific Fertility Rate\",\n                          \"Survived Women\",\n                          \"Annual births\")\n\nfake_birth_data\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_di9heiwfde3yy70e02so(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_di9heiwfde3yy70e02so\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_di9heiwfde3yy70e02so');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_di9heiwfde3yy70e02so(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_di9heiwfde3yy70e02so\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 1, j: 8 }, { i: 2, j: 8 }, { i: 3, j: 8 }, { i: 4, j: 8 }, { i: 5, j: 8 },  ], css_id: 'tinytable_css_xfydc5fcjbh297ht3o00',}, \n          { positions: [ { i: 6, j: 6 }, { i: 6, j: 0 }, { i: 6, j: 2 }, { i: 6, j: 4 }, { i: 6, j: 1 }, { i: 6, j: 3 }, { i: 6, j: 5 }, { i: 6, j: 7 },  ], css_id: 'tinytable_css_x0pl2qgyp7i6yhq14h8y',}, \n          { positions: [ { i: 6, j: 8 },  ], css_id: 'tinytable_css_vsppibd9dpbwajpf9l71',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 2 }, { i: 0, j: 4 }, { i: 0, j: 6 }, { i: 0, j: 3 }, { i: 0, j: 5 }, { i: 0, j: 7 }, { i: 0, j: 1 },  ], css_id: 'tinytable_css_9w42fbe3tx7lb0kdcugl',}, \n          { positions: [ { i: 0, j: 8 },  ], css_id: 'tinytable_css_49508imbndb5bmdqdoj2',}, \n          { positions: [ { i: 4, j: 0 }, { i: 5, j: 0 }, { i: 5, j: 2 }, { i: 4, j: 1 }, { i: 5, j: 1 }, { i: 5, j: 3 }, { i: 1, j: 0 }, { i: 2, j: 0 }, { i: 3, j: 0 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 4, j: 4 }, { i: 5, j: 4 }, { i: 1, j: 1 }, { i: 2, j: 1 }, { i: 3, j: 1 }, { i: 3, j: 3 }, { i: 4, j: 3 }, { i: 4, j: 5 }, { i: 5, j: 5 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 3, j: 6 }, { i: 4, j: 6 }, { i: 5, j: 6 }, { i: 1, j: 3 }, { i: 2, j: 3 }, { i: 2, j: 5 }, { i: 3, j: 5 }, { i: 3, j: 7 }, { i: 4, j: 7 }, { i: 5, j: 7 }, { i: 1, j: 4 }, { i: 1, j: 6 }, { i: 2, j: 6 }, { i: 1, j: 5 }, { i: 1, j: 7 }, { i: 2, j: 7 },  ], css_id: 'tinytable_css_1z3orhpely09f6ajuyic',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_di9heiwfde3yy70e02so(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_xfydc5fcjbh297ht3o00, .table th.tinytable_css_xfydc5fcjbh297ht3o00 { padding-bottom: 0.1em; }\n      .table td.tinytable_css_x0pl2qgyp7i6yhq14h8y, .table th.tinytable_css_x0pl2qgyp7i6yhq14h8y { border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_vsppibd9dpbwajpf9l71, .table th.tinytable_css_vsppibd9dpbwajpf9l71 { border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_9w42fbe3tx7lb0kdcugl, .table th.tinytable_css_9w42fbe3tx7lb0kdcugl { border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_49508imbndb5bmdqdoj2, .table th.tinytable_css_49508imbndb5bmdqdoj2 { border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_1z3orhpely09f6ajuyic, .table th.tinytable_css_1z3orhpely09f6ajuyic { padding-right: 0.5em; padding-bottom: 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover\" id=\"tinytable_di9heiwfde3yy70e02so\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Calculating Births</caption>\n              <tr>\n                <th scope=\"col\">Ages</th>\n                <th scope=\"col\">Births in 2024</th>\n                <th scope=\"col\">Births in 2025</th>\n                <th scope=\"col\">Births in 2026</th>\n                <th scope=\"col\">Average number of births</th>\n                <th scope=\"col\">Women Census 2024</th>\n                <th scope=\"col\">Age Specific Fertility Rate</th>\n                <th scope=\"col\">Survived Women</th>\n                <th scope=\"col\">Annual births</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>15-19</td>\n                  <td>324</td>\n                  <td>273</td>\n                  <td>302</td>\n                  <td>299.7</td>\n                  <td>2648</td>\n                  <td>0.11317</td>\n                  <td>2637</td>\n                  <td>298.5</td>\n                </tr>\n                <tr>\n                  <td>20-24</td>\n                  <td>472</td>\n                  <td>442</td>\n                  <td>457</td>\n                  <td>457  </td>\n                  <td>3478</td>\n                  <td>0.1314 </td>\n                  <td>3456</td>\n                  <td>454.2</td>\n                </tr>\n                <tr>\n                  <td>25-29</td>\n                  <td>427</td>\n                  <td>411</td>\n                  <td>416</td>\n                  <td>418  </td>\n                  <td>4022</td>\n                  <td>0.10393</td>\n                  <td>3988</td>\n                  <td>414.5</td>\n                </tr>\n                <tr>\n                  <td>30-34</td>\n                  <td>258</td>\n                  <td>250</td>\n                  <td>274</td>\n                  <td>260.7</td>\n                  <td>4091</td>\n                  <td>0.06372</td>\n                  <td>4038</td>\n                  <td>257.3</td>\n                </tr>\n                <tr>\n                  <td>35-39</td>\n                  <td>102</td>\n                  <td>93 </td>\n                  <td>74 </td>\n                  <td>89.7 </td>\n                  <td>3823</td>\n                  <td>0.02345</td>\n                  <td>3745</td>\n                  <td>87.8 </td>\n                </tr>\n                <tr>\n                  <td>40-44</td>\n                  <td>10 </td>\n                  <td>9  </td>\n                  <td>14 </td>\n                  <td>11   </td>\n                  <td>3474</td>\n                  <td>0.00317</td>\n                  <td>3360</td>\n                  <td>10.6 </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n\n```{.r .cell-code}\n\n# Using survival rates and the projection period\ntotal_projected_births = sum(annual_births) * 5\nfemale_births = total_projected_births * .49\nprojected_birth_females = female_births * .9809\n\ntotal_births_data <- data.frame(\n  total_projected_births,\n  female_births,\n  projected_birth_females\n) |>\n  tt(digits = 3,\n     them = \"spacing\",\n     caption = \"Estimating births of female over projection period\")\n\ncolnames(total_births_data) <- c(\"Expected births\",\"Female Births\",\n                 \"Number of projected births\")\n\ntotal_births_data\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_n4d4mltnidegvqm08zhr(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_n4d4mltnidegvqm08zhr\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_n4d4mltnidegvqm08zhr');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_n4d4mltnidegvqm08zhr(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_n4d4mltnidegvqm08zhr\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 1 },  ], css_id: 'tinytable_css_yzp1nin2rti8dlpxgidp',}, \n          { positions: [ { i: 1, j: 0 }, { i: 1, j: 1 },  ], css_id: 'tinytable_css_x5czmquvx4cwj0wtlvwd',}, \n          { positions: [ { i: 0, j: 2 },  ], css_id: 'tinytable_css_6isdr35m77g34zp04fwp',}, \n          { positions: [ { i: 1, j: 2 },  ], css_id: 'tinytable_css_0uo32ak4ofa7c6olltnr',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_n4d4mltnidegvqm08zhr(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_yzp1nin2rti8dlpxgidp, .table th.tinytable_css_yzp1nin2rti8dlpxgidp { border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_x5czmquvx4cwj0wtlvwd, .table th.tinytable_css_x5czmquvx4cwj0wtlvwd { border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_6isdr35m77g34zp04fwp, .table th.tinytable_css_6isdr35m77g34zp04fwp { border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_0uo32ak4ofa7c6olltnr, .table th.tinytable_css_0uo32ak4ofa7c6olltnr { border-bottom: solid #d3d8dc 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-borderless\" id=\"tinytable_n4d4mltnidegvqm08zhr\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Estimating births of female over projection period</caption>\n              <tr>\n                <th scope=\"col\">Expected births</th>\n                <th scope=\"col\">Female Births</th>\n                <th scope=\"col\">Number of projected births</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>7614</td>\n                  <td>3731</td>\n                  <td>3660</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\nLastly, we need to calculate the net migration rate using survival rates, but first let's define **migration** as the semi-permanent or permanent movement across political boundaries while **net migration** is the number of migrants who stayed (immigrants - out-migrants) in the country within the measurement period divided by the possibility of migration.\n\n$$\n\\begin{split}\n\\text{net migration rate} = \\frac{M_{0} - M_{n}}{population} \\times K, \\\\\n\\text{where K is a constant, typically 100}\n\\end{split}\n$$\nThe process of obtaining migration information typically takes one of two approaches,  \n\n* *Direct method*: use continuous registration systems where people report their change in residence immediately to a local government.  \n* *Indirect measures:* use vital statistics, a residual method or the survival ratio method.   \n\nMost planners use indirect measures to come up with migration estimates. \n\n$$\n\\begin{split}\nP_{t+n} = P_{t-1} + \\text{births} - \\text{deaths} + \\text{net migrants} \\\\ \\\\\n\\text{net migrants} = (P_{t+n} - P) - (\\text{births} - \\text{deaths}), \\\\ \\\\\n\\text{where} \\\\ \\\\\nP_{t+n} = \\text{current population} \\\\ \\\\\nP_{t}  = \\text{the last census}\n\\end{split}\n$$\nPlanners typically use survival ratio methods to estimate net migration rates. The **forward** and **reverse** methods estimate net migration by age and sex.\n\n#### forward method\n\nThis method calculates the number of net migrants and assumes that all migration takes place at the end of the measurement period. All deaths occur in the community for which the estimates are being computed; and all deaths are non-migrant deaths. These assumptions are obviously naive and may impact the projection estimates. \n$$\n\\begin{split}\nm_{x+t} = p^{t}_{x+t} - s \\times p^{0}_{x}, \\\\ \\\\\n\\text{where} \\\\\nm_{x+t} = \\text{net migration of persons age}_{x+t} \\\\\nx = \\text{an age or age group} \\\\\np^{0}_{x} = \\text{population age x at the first census} \\\\\np^{t}_{x+t} = \\text{population at the next census age}_{x+t} \\\\\ns = \\text{surival rate}\n\\end{split}\n$$\nThe survival rate is multiplied by the prior census population, and the result provides the expected population at the next census period. By subtracting the expected population from the present census period, we obtain a difference that represents the migration data^[Out-migration is indicated by negative numbers in certain age groups, while in older age groups, they may also signify mortality.].\n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code  code-fold=\"true\"}\nage_2014 <- c(\n  NA,NA,\"0-4\", \"5-9\", \"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\",\n  \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n  \"65-69\", \"70-74\", \"75+\"\n)\n\nage_2024 <- c( \"0-4\", \"5-9\",\"10-14\", \"15-19\", \"20-24\", \"25-29\", \"30-34\",\n                \"35-39\", \"40-44\", \"45-49\", \"50-54\", \"55-59\", \"60-64\", \n                \"65-69\", \"70-74\", \"75-79\",\"80-84\",\"85+\")\n\nsurvival_rates <- c(\n  0.9892,0.9962,0.998,0.9966,0.9948,0.9942,0.9932,0.991,0.9864,\n  0.9785,0.9661,0.9463,0.9208,0.8855,0.8265,0.7281,0.5782,0.5524\n)\n\ncensus_2014 <- c(\n  3226,2468,2346,2387,2535,3332,3949,3144,\n  2515,1674,1337,1218,1326,1236,1127,1129,895,1089\n)\n\nexpected_population <- (\n  survival_rates * census_2014\n)\n\ncensus_2024 <- c(\n  3006,2632,2648,3478,4022,4091,3823,3474,2648,\n  1706,1341,1155,1180,1139,951,827,545,409\n)\n\nnet_migrants <-(\n  census_2024 - expected_population\n)\n\nnet_migration_rate <- (\n  net_migrants/census_2024\n)\n\nfake_net_migration <- data.frame(\n  \"Ages 2014\" = age_2014,\n  \"Ages 2024\" = age_2024,\n  \"Survival Rates\" = survival_rates,\n  \"Census 2014\" = census_2014,\n  \"Expected Population\" = expected_population,\n  \"Census 2024\" = census_2024,\n  \"Net Migrants\" = net_migrants,\n  \"Net Migration Rate\" = net_migration_rate\n) |> tt(digits = 3,\n        theme = \"spacing\",\n  caption = \"Estimating Net Migration Rate using the Forward Survival Rate Method\"\n) |>\n  style_tt(align = \"c\",\n           bootstrap_class = \"table table-hover\")\n\ncolnames(fake_net_migration) <- c(\n  \"Ages 2014\", \n  \"Ages 2024\", \n  \"Survival Rates\", \n  \"Census 2014\", \n  \"Expected Population\", \n  \"Census 2024\", \n  \"Net Migrants\", \n  \"Net Migration Rate\"\n)\n\nfake_net_migration\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_vjttmqj1qir5p6iisd4l(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_vjttmqj1qir5p6iisd4l\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_vjttmqj1qir5p6iisd4l');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_vjttmqj1qir5p6iisd4l(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_vjttmqj1qir5p6iisd4l\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 7 },  ], css_id: 'tinytable_css_tszlz5wzoj724dbcvbam',}, \n          { positions: [ { i: 18, j: 7 },  ], css_id: 'tinytable_css_nxzio0qc9usqa15prbkk',}, \n          { positions: [ { i: 18, j: 4 }, { i: 18, j: 2 }, { i: 18, j: 0 }, { i: 18, j: 5 }, { i: 18, j: 3 }, { i: 18, j: 1 }, { i: 18, j: 6 },  ], css_id: 'tinytable_css_mk2ahxxo084md9bdybhq',}, \n          { positions: [ { i: 1, j: 0 }, { i: 3, j: 0 }, { i: 5, j: 0 }, { i: 7, j: 0 }, { i: 9, j: 0 }, { i: 11, j: 0 }, { i: 13, j: 0 }, { i: 14, j: 0 }, { i: 2, j: 0 }, { i: 16, j: 0 }, { i: 4, j: 0 }, { i: 1, j: 3 }, { i: 6, j: 0 }, { i: 1, j: 1 }, { i: 8, j: 0 }, { i: 3, j: 1 }, { i: 10, j: 0 }, { i: 5, j: 1 }, { i: 12, j: 0 }, { i: 7, j: 1 }, { i: 8, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 }, { i: 12, j: 1 }, { i: 13, j: 1 }, { i: 14, j: 1 }, { i: 2, j: 1 }, { i: 16, j: 1 }, { i: 4, j: 1 }, { i: 1, j: 4 }, { i: 6, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 7, j: 2 }, { i: 8, j: 2 }, { i: 9, j: 2 }, { i: 10, j: 2 }, { i: 11, j: 2 }, { i: 12, j: 2 }, { i: 13, j: 2 }, { i: 14, j: 2 }, { i: 15, j: 2 }, { i: 16, j: 2 }, { i: 15, j: 0 }, { i: 1, j: 5 }, { i: 17, j: 0 }, { i: 3, j: 5 }, { i: 2, j: 3 }, { i: 3, j: 3 }, { i: 4, j: 3 }, { i: 5, j: 3 }, { i: 6, j: 3 }, { i: 7, j: 3 }, { i: 8, j: 3 }, { i: 9, j: 3 }, { i: 10, j: 3 }, { i: 11, j: 3 }, { i: 12, j: 3 }, { i: 13, j: 3 }, { i: 14, j: 3 }, { i: 15, j: 3 }, { i: 16, j: 3 }, { i: 15, j: 1 }, { i: 1, j: 6 }, { i: 17, j: 1 }, { i: 3, j: 6 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 4, j: 4 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 7, j: 4 }, { i: 8, j: 4 }, { i: 9, j: 4 }, { i: 10, j: 4 }, { i: 11, j: 4 }, { i: 12, j: 4 }, { i: 13, j: 4 }, { i: 14, j: 4 }, { i: 15, j: 4 }, { i: 16, j: 4 }, { i: 17, j: 4 }, { i: 12, j: 5 }, { i: 17, j: 2 }, { i: 14, j: 5 }, { i: 2, j: 5 }, { i: 16, j: 5 }, { i: 4, j: 5 }, { i: 5, j: 5 }, { i: 6, j: 5 }, { i: 7, j: 5 }, { i: 8, j: 5 }, { i: 9, j: 5 }, { i: 10, j: 5 }, { i: 11, j: 5 }, { i: 6, j: 6 }, { i: 13, j: 5 }, { i: 8, j: 6 }, { i: 15, j: 5 }, { i: 10, j: 6 }, { i: 17, j: 5 }, { i: 12, j: 6 }, { i: 17, j: 3 }, { i: 14, j: 6 }, { i: 2, j: 6 }, { i: 16, j: 6 }, { i: 4, j: 6 }, { i: 5, j: 6 }, { i: 7, j: 6 }, { i: 9, j: 6 }, { i: 11, j: 6 }, { i: 13, j: 6 }, { i: 15, j: 6 }, { i: 17, j: 6 },  ], css_id: 'tinytable_css_mdaqbaz9zp3jflgae2b1',}, \n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 5 }, { i: 0, j: 3 }, { i: 0, j: 1 }, { i: 0, j: 6 }, { i: 0, j: 4 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_45jdqest4lkfy3o0q65h',}, \n          { positions: [ { i: 1, j: 7 }, { i: 2, j: 7 }, { i: 3, j: 7 }, { i: 4, j: 7 }, { i: 5, j: 7 }, { i: 6, j: 7 }, { i: 7, j: 7 }, { i: 8, j: 7 }, { i: 9, j: 7 }, { i: 10, j: 7 }, { i: 11, j: 7 }, { i: 12, j: 7 }, { i: 13, j: 7 }, { i: 14, j: 7 }, { i: 15, j: 7 }, { i: 16, j: 7 }, { i: 17, j: 7 },  ], css_id: 'tinytable_css_3ex5a1spj4v23p8cr0fd',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_vjttmqj1qir5p6iisd4l(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_tszlz5wzoj724dbcvbam, .table th.tinytable_css_tszlz5wzoj724dbcvbam { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_nxzio0qc9usqa15prbkk, .table th.tinytable_css_nxzio0qc9usqa15prbkk { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_mk2ahxxo084md9bdybhq, .table th.tinytable_css_mk2ahxxo084md9bdybhq { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_mdaqbaz9zp3jflgae2b1, .table th.tinytable_css_mdaqbaz9zp3jflgae2b1 { text-align: center; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_45jdqest4lkfy3o0q65h, .table th.tinytable_css_45jdqest4lkfy3o0q65h { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_3ex5a1spj4v23p8cr0fd, .table th.tinytable_css_3ex5a1spj4v23p8cr0fd { text-align: center; padding-bottom: 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover\" id=\"tinytable_vjttmqj1qir5p6iisd4l\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Estimating Net Migration Rate using the Forward Survival Rate Method</caption>\n              <tr>\n                <th scope=\"col\">Ages 2014</th>\n                <th scope=\"col\">Ages 2024</th>\n                <th scope=\"col\">Survival Rates</th>\n                <th scope=\"col\">Census 2014</th>\n                <th scope=\"col\">Expected Population</th>\n                <th scope=\"col\">Census 2024</th>\n                <th scope=\"col\">Net Migrants</th>\n                <th scope=\"col\">Net Migration Rate</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>     </td>\n                  <td>0-4  </td>\n                  <td>0.989</td>\n                  <td>3226</td>\n                  <td>3191</td>\n                  <td>3006</td>\n                  <td>-185.16</td>\n                  <td>-0.0616 </td>\n                </tr>\n                <tr>\n                  <td>     </td>\n                  <td>5-9  </td>\n                  <td>0.996</td>\n                  <td>2468</td>\n                  <td>2459</td>\n                  <td>2632</td>\n                  <td>173.38 </td>\n                  <td>0.06587 </td>\n                </tr>\n                <tr>\n                  <td>0-4  </td>\n                  <td>10-14</td>\n                  <td>0.998</td>\n                  <td>2346</td>\n                  <td>2341</td>\n                  <td>2648</td>\n                  <td>306.69 </td>\n                  <td>0.11582 </td>\n                </tr>\n                <tr>\n                  <td>5-9  </td>\n                  <td>15-19</td>\n                  <td>0.997</td>\n                  <td>2387</td>\n                  <td>2379</td>\n                  <td>3478</td>\n                  <td>1099.12</td>\n                  <td>0.31602 </td>\n                </tr>\n                <tr>\n                  <td>10-14</td>\n                  <td>20-24</td>\n                  <td>0.995</td>\n                  <td>2535</td>\n                  <td>2522</td>\n                  <td>4022</td>\n                  <td>1500.18</td>\n                  <td>0.37299 </td>\n                </tr>\n                <tr>\n                  <td>15-19</td>\n                  <td>25-29</td>\n                  <td>0.994</td>\n                  <td>3332</td>\n                  <td>3313</td>\n                  <td>4091</td>\n                  <td>778.33 </td>\n                  <td>0.19025 </td>\n                </tr>\n                <tr>\n                  <td>20-24</td>\n                  <td>30-34</td>\n                  <td>0.993</td>\n                  <td>3949</td>\n                  <td>3922</td>\n                  <td>3823</td>\n                  <td>-99.15 </td>\n                  <td>-0.02593</td>\n                </tr>\n                <tr>\n                  <td>25-29</td>\n                  <td>35-39</td>\n                  <td>0.991</td>\n                  <td>3144</td>\n                  <td>3116</td>\n                  <td>3474</td>\n                  <td>358.3  </td>\n                  <td>0.10314 </td>\n                </tr>\n                <tr>\n                  <td>30-34</td>\n                  <td>40-44</td>\n                  <td>0.986</td>\n                  <td>2515</td>\n                  <td>2481</td>\n                  <td>2648</td>\n                  <td>167.2  </td>\n                  <td>0.06314 </td>\n                </tr>\n                <tr>\n                  <td>35-39</td>\n                  <td>45-49</td>\n                  <td>0.979</td>\n                  <td>1674</td>\n                  <td>1638</td>\n                  <td>1706</td>\n                  <td>67.99  </td>\n                  <td>0.03985 </td>\n                </tr>\n                <tr>\n                  <td>40-44</td>\n                  <td>50-54</td>\n                  <td>0.966</td>\n                  <td>1337</td>\n                  <td>1292</td>\n                  <td>1341</td>\n                  <td>49.32  </td>\n                  <td>0.03678 </td>\n                </tr>\n                <tr>\n                  <td>45-49</td>\n                  <td>55-59</td>\n                  <td>0.946</td>\n                  <td>1218</td>\n                  <td>1153</td>\n                  <td>1155</td>\n                  <td>2.41   </td>\n                  <td>0.00208 </td>\n                </tr>\n                <tr>\n                  <td>50-54</td>\n                  <td>60-64</td>\n                  <td>0.921</td>\n                  <td>1326</td>\n                  <td>1221</td>\n                  <td>1180</td>\n                  <td>-40.98 </td>\n                  <td>-0.03473</td>\n                </tr>\n                <tr>\n                  <td>55-59</td>\n                  <td>65-69</td>\n                  <td>0.885</td>\n                  <td>1236</td>\n                  <td>1094</td>\n                  <td>1139</td>\n                  <td>44.52  </td>\n                  <td>0.03909 </td>\n                </tr>\n                <tr>\n                  <td>60-64</td>\n                  <td>70-74</td>\n                  <td>0.827</td>\n                  <td>1127</td>\n                  <td>931 </td>\n                  <td>951 </td>\n                  <td>19.53  </td>\n                  <td>0.02054 </td>\n                </tr>\n                <tr>\n                  <td>65-69</td>\n                  <td>75-79</td>\n                  <td>0.728</td>\n                  <td>1129</td>\n                  <td>822 </td>\n                  <td>827 </td>\n                  <td>4.98   </td>\n                  <td>0.00602 </td>\n                </tr>\n                <tr>\n                  <td>70-74</td>\n                  <td>80-84</td>\n                  <td>0.578</td>\n                  <td>895 </td>\n                  <td>517 </td>\n                  <td>545 </td>\n                  <td>27.51  </td>\n                  <td>0.05048 </td>\n                </tr>\n                <tr>\n                  <td>75+  </td>\n                  <td>85+  </td>\n                  <td>0.552</td>\n                  <td>1089</td>\n                  <td>602 </td>\n                  <td>409 </td>\n                  <td>-192.56</td>\n                  <td>-0.47082</td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n\n#### reverse method\n\nThis method uses a slightly different approach to estimate number of net migrants; however, some strong assumptions are made. First, it assumes that deaths occur to people after migrating, and population change is not accounted for by fertility and mortality is due to migration(an assumption that is also present in the forward method). In reality, population change can be accounted for by several other factors such as errors in the census (under counting,under/over reporting), and boundary changes from one census to the next.\n\n$$\n\\begin{split}\nm = \\frac{p^{t}_{x+t}}{s} - p^{0}_{x}, \\\\ \\\\\n\\text{where} \\\\\nm = \\text{net migration of persons age}_{0} \\\\\nx = \\text{an age or age group} \\\\\np^{0}_{x} = \\text{population age x at the first census} \\\\\np^{t}_{x+t} = \\text{population at the current census age}_{x+t} \\\\\ns = \\text{surival rate}\n\\end{split}\n$$\n\nTo get the net number of migrants we use the previous population counts. The population in the last census, often called *terminal* population, is brought back –*revived*– to the initial census date to estimate the number of persons alive at the earlier date, whatever the date is for the last census. In other words, The 2024 population is divided by the survival rate to estimate what the population would have been in 2014 if everyone alive in 2024 had been alive in 2014. Then, by subtracting the new, expected population from the prior census data, we obtain the number of migrants. \n\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Reverse method: revive population to the earlier date\nrevived_population <- census_2024 / survival_rates\n\n# Net migrants using the reverse method\nnet_migrants_reverse <- census_2014 - revived_population\n\n# Net migration rate using the reverse method\nnet_migration_rate_reverse <- net_migrants_reverse / census_2014\n\n# Create data frame with results\nreverse_net_migration <- data.frame(\n  \"Ages 2014\" = age_2014,\n  \"Ages 2024\" = age_2024,\n  \"Survival Rates\" = survival_rates,\n  \"Census 2014\" = census_2014,\n  \"Revived Population\" = round(revived_population, 2),\n  \"Census 2024\" = census_2024,\n  \"Net Migrants (Reverse)\" = round(net_migrants_reverse, 2),\n  \"Net Migration Rate (Reverse)\" = round(net_migration_rate_reverse, 4)\n) |> tt(digits = 3,\n        theme = \"spacing\",\n  caption = \"Estimating Net Migration Rate using the Reverse Survival Rate Method\"\n) |>\n  style_tt(align = \"c\",\n   bootstrap_class = \"table table-hover\")\n\ncolnames(reverse_net_migration) <- c(\n  \"Ages 2014\", \n  \"Ages 2024\", \n  \"Survival Rates\", \n  \"Census 2014\", \n  \"Revived Population\",\n  \"Census 2024\",\n  \"Net Migrants (Reverse)\", \n  \"Net Migration Rate (Reverse)\"\n)\n\nreverse_net_migration\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<!-- preamble start -->\n\n    <script>\n\n      function styleCell_ug9vbw3i98ixdhqb3mx1(i, j, css_id) {\n          var table = document.getElementById(\"tinytable_ug9vbw3i98ixdhqb3mx1\");\n          var cell = table.rows[i]?.cells[j];  // Safe navigation to avoid errors\n          if (cell) {\n              console.log(`Styling cell at (${i}, ${j}) with class ${css_id}`);\n              cell.classList.add(css_id);\n          } else {\n              console.warn(`Cell at (${i}, ${j}) not found.`);\n          }\n      }\n      function insertSpanRow(i, colspan, content) {\n        var table = document.getElementById('tinytable_ug9vbw3i98ixdhqb3mx1');\n        var newRow = table.insertRow(i);\n        var newCell = newRow.insertCell(0);\n        newCell.setAttribute(\"colspan\", colspan);\n        // newCell.innerText = content;\n        // this may be unsafe, but innerText does not interpret <br>\n        newCell.innerHTML = content;\n      }\n      function spanCell_ug9vbw3i98ixdhqb3mx1(i, j, rowspan, colspan) {\n        var table = document.getElementById(\"tinytable_ug9vbw3i98ixdhqb3mx1\");\n        const targetRow = table.rows[i];\n        const targetCell = targetRow.cells[j];\n        for (let r = 0; r < rowspan; r++) {\n          // Only start deleting cells to the right for the first row (r == 0)\n          if (r === 0) {\n            // Delete cells to the right of the target cell in the first row\n            for (let c = colspan - 1; c > 0; c--) {\n              if (table.rows[i + r].cells[j + c]) {\n                table.rows[i + r].deleteCell(j + c);\n              }\n            }\n          }\n          // For rows below the first, delete starting from the target column\n          if (r > 0) {\n            for (let c = colspan - 1; c >= 0; c--) {\n              if (table.rows[i + r] && table.rows[i + r].cells[j]) {\n                table.rows[i + r].deleteCell(j);\n              }\n            }\n          }\n        }\n        // Set rowspan and colspan of the target cell\n        targetCell.rowSpan = rowspan;\n        targetCell.colSpan = colspan;\n      }\n      // tinytable span after\n      window.addEventListener('load', function () {\n          var cellsToStyle = [\n            // tinytable style arrays after\n          { positions: [ { i: 0, j: 0 }, { i: 0, j: 5 }, { i: 0, j: 3 }, { i: 0, j: 1 }, { i: 0, j: 6 }, { i: 0, j: 4 }, { i: 0, j: 2 },  ], css_id: 'tinytable_css_w630rdoyqvp7tcudff1z',}, \n          { positions: [ { i: 1, j: 7 }, { i: 2, j: 7 }, { i: 3, j: 7 }, { i: 4, j: 7 }, { i: 5, j: 7 }, { i: 6, j: 7 }, { i: 7, j: 7 }, { i: 8, j: 7 }, { i: 9, j: 7 }, { i: 10, j: 7 }, { i: 11, j: 7 }, { i: 12, j: 7 }, { i: 13, j: 7 }, { i: 14, j: 7 }, { i: 15, j: 7 }, { i: 16, j: 7 }, { i: 17, j: 7 },  ], css_id: 'tinytable_css_tw6n5e0rcglirtze5d0d',}, \n          { positions: [ { i: 18, j: 4 }, { i: 18, j: 2 }, { i: 18, j: 0 }, { i: 18, j: 5 }, { i: 18, j: 3 }, { i: 18, j: 1 }, { i: 18, j: 6 },  ], css_id: 'tinytable_css_jw50m6frs019r20ry110',}, \n          { positions: [ { i: 0, j: 7 },  ], css_id: 'tinytable_css_dfnohs8dcsy7vb7o9p7c',}, \n          { positions: [ { i: 18, j: 7 },  ], css_id: 'tinytable_css_1zb67nt60no6ne5pe7w2',}, \n          { positions: [ { i: 1, j: 0 }, { i: 3, j: 0 }, { i: 5, j: 0 }, { i: 7, j: 0 }, { i: 9, j: 0 }, { i: 11, j: 0 }, { i: 13, j: 0 }, { i: 14, j: 0 }, { i: 2, j: 0 }, { i: 16, j: 0 }, { i: 4, j: 0 }, { i: 1, j: 3 }, { i: 6, j: 0 }, { i: 1, j: 1 }, { i: 8, j: 0 }, { i: 3, j: 1 }, { i: 10, j: 0 }, { i: 5, j: 1 }, { i: 12, j: 0 }, { i: 7, j: 1 }, { i: 8, j: 1 }, { i: 9, j: 1 }, { i: 10, j: 1 }, { i: 11, j: 1 }, { i: 12, j: 1 }, { i: 13, j: 1 }, { i: 14, j: 1 }, { i: 2, j: 1 }, { i: 16, j: 1 }, { i: 4, j: 1 }, { i: 1, j: 4 }, { i: 6, j: 1 }, { i: 1, j: 2 }, { i: 2, j: 2 }, { i: 3, j: 2 }, { i: 4, j: 2 }, { i: 5, j: 2 }, { i: 6, j: 2 }, { i: 7, j: 2 }, { i: 8, j: 2 }, { i: 9, j: 2 }, { i: 10, j: 2 }, { i: 11, j: 2 }, { i: 12, j: 2 }, { i: 13, j: 2 }, { i: 14, j: 2 }, { i: 15, j: 2 }, { i: 16, j: 2 }, { i: 15, j: 0 }, { i: 1, j: 5 }, { i: 17, j: 0 }, { i: 3, j: 5 }, { i: 2, j: 3 }, { i: 3, j: 3 }, { i: 4, j: 3 }, { i: 5, j: 3 }, { i: 6, j: 3 }, { i: 7, j: 3 }, { i: 8, j: 3 }, { i: 9, j: 3 }, { i: 10, j: 3 }, { i: 11, j: 3 }, { i: 12, j: 3 }, { i: 13, j: 3 }, { i: 14, j: 3 }, { i: 15, j: 3 }, { i: 16, j: 3 }, { i: 15, j: 1 }, { i: 1, j: 6 }, { i: 17, j: 1 }, { i: 3, j: 6 }, { i: 2, j: 4 }, { i: 3, j: 4 }, { i: 4, j: 4 }, { i: 5, j: 4 }, { i: 6, j: 4 }, { i: 7, j: 4 }, { i: 8, j: 4 }, { i: 9, j: 4 }, { i: 10, j: 4 }, { i: 11, j: 4 }, { i: 12, j: 4 }, { i: 13, j: 4 }, { i: 14, j: 4 }, { i: 15, j: 4 }, { i: 16, j: 4 }, { i: 17, j: 4 }, { i: 12, j: 5 }, { i: 17, j: 2 }, { i: 14, j: 5 }, { i: 2, j: 5 }, { i: 16, j: 5 }, { i: 4, j: 5 }, { i: 5, j: 5 }, { i: 6, j: 5 }, { i: 7, j: 5 }, { i: 8, j: 5 }, { i: 9, j: 5 }, { i: 10, j: 5 }, { i: 11, j: 5 }, { i: 6, j: 6 }, { i: 13, j: 5 }, { i: 8, j: 6 }, { i: 15, j: 5 }, { i: 10, j: 6 }, { i: 17, j: 5 }, { i: 12, j: 6 }, { i: 17, j: 3 }, { i: 14, j: 6 }, { i: 2, j: 6 }, { i: 16, j: 6 }, { i: 4, j: 6 }, { i: 5, j: 6 }, { i: 7, j: 6 }, { i: 9, j: 6 }, { i: 11, j: 6 }, { i: 13, j: 6 }, { i: 15, j: 6 }, { i: 17, j: 6 },  ], css_id: 'tinytable_css_0xjqfre523ydj79wopwj',}, \n          ];\n\n          // Loop over the arrays to style the cells\n          cellsToStyle.forEach(function (group) {\n              group.positions.forEach(function (cell) {\n                  styleCell_ug9vbw3i98ixdhqb3mx1(cell.i, cell.j, group.css_id);\n              });\n          });\n      });\n    </script>\n\n    <style>\n      /* tinytable css entries after */\n      .table td.tinytable_css_w630rdoyqvp7tcudff1z, .table th.tinytable_css_w630rdoyqvp7tcudff1z { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_tw6n5e0rcglirtze5d0d, .table th.tinytable_css_tw6n5e0rcglirtze5d0d { text-align: center; padding-bottom: 0.1em; }\n      .table td.tinytable_css_jw50m6frs019r20ry110, .table th.tinytable_css_jw50m6frs019r20ry110 { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-right: 0.5em; }\n      .table td.tinytable_css_dfnohs8dcsy7vb7o9p7c, .table th.tinytable_css_dfnohs8dcsy7vb7o9p7c { text-align: center; border-bottom: solid #d3d8dc 0.1em; padding-bottom: 0.1em; }\n      .table td.tinytable_css_1zb67nt60no6ne5pe7w2, .table th.tinytable_css_1zb67nt60no6ne5pe7w2 { text-align: center; border-bottom: solid #d3d8dc 0.1em; }\n      .table td.tinytable_css_0xjqfre523ydj79wopwj, .table th.tinytable_css_0xjqfre523ydj79wopwj { text-align: center; padding-right: 0.5em; padding-bottom: 0.1em; }\n    </style>\n    <div class=\"container\">\n      <table class=\"table table-hover\" id=\"tinytable_ug9vbw3i98ixdhqb3mx1\" style=\"width: auto; margin-left: auto; margin-right: auto;\" data-quarto-disable-processing='true'>\n        <thead>\n        <caption>Estimating Net Migration Rate using the Reverse Survival Rate Method</caption>\n              <tr>\n                <th scope=\"col\">Ages 2014</th>\n                <th scope=\"col\">Ages 2024</th>\n                <th scope=\"col\">Survival Rates</th>\n                <th scope=\"col\">Census 2014</th>\n                <th scope=\"col\">Revived Population</th>\n                <th scope=\"col\">Census 2024</th>\n                <th scope=\"col\">Net Migrants (Reverse)</th>\n                <th scope=\"col\">Net Migration Rate (Reverse)</th>\n              </tr>\n        </thead>\n        \n        <tbody>\n                <tr>\n                  <td>     </td>\n                  <td>0-4  </td>\n                  <td>0.989</td>\n                  <td>3226</td>\n                  <td>3039</td>\n                  <td>3006</td>\n                  <td>187.18  </td>\n                  <td>0.058  </td>\n                </tr>\n                <tr>\n                  <td>     </td>\n                  <td>5-9  </td>\n                  <td>0.996</td>\n                  <td>2468</td>\n                  <td>2642</td>\n                  <td>2632</td>\n                  <td>-174.04 </td>\n                  <td>-0.0705</td>\n                </tr>\n                <tr>\n                  <td>0-4  </td>\n                  <td>10-14</td>\n                  <td>0.998</td>\n                  <td>2346</td>\n                  <td>2653</td>\n                  <td>2648</td>\n                  <td>-307.31 </td>\n                  <td>-0.131 </td>\n                </tr>\n                <tr>\n                  <td>5-9  </td>\n                  <td>15-19</td>\n                  <td>0.997</td>\n                  <td>2387</td>\n                  <td>3490</td>\n                  <td>3478</td>\n                  <td>-1102.87</td>\n                  <td>-0.462 </td>\n                </tr>\n                <tr>\n                  <td>10-14</td>\n                  <td>20-24</td>\n                  <td>0.995</td>\n                  <td>2535</td>\n                  <td>4043</td>\n                  <td>4022</td>\n                  <td>-1508.02</td>\n                  <td>-0.5949</td>\n                </tr>\n                <tr>\n                  <td>15-19</td>\n                  <td>25-29</td>\n                  <td>0.994</td>\n                  <td>3332</td>\n                  <td>4115</td>\n                  <td>4091</td>\n                  <td>-782.87 </td>\n                  <td>-0.235 </td>\n                </tr>\n                <tr>\n                  <td>20-24</td>\n                  <td>30-34</td>\n                  <td>0.993</td>\n                  <td>3949</td>\n                  <td>3849</td>\n                  <td>3823</td>\n                  <td>99.83   </td>\n                  <td>0.0253 </td>\n                </tr>\n                <tr>\n                  <td>25-29</td>\n                  <td>35-39</td>\n                  <td>0.991</td>\n                  <td>3144</td>\n                  <td>3506</td>\n                  <td>3474</td>\n                  <td>-361.55 </td>\n                  <td>-0.115 </td>\n                </tr>\n                <tr>\n                  <td>30-34</td>\n                  <td>40-44</td>\n                  <td>0.986</td>\n                  <td>2515</td>\n                  <td>2685</td>\n                  <td>2648</td>\n                  <td>-169.51 </td>\n                  <td>-0.0674</td>\n                </tr>\n                <tr>\n                  <td>35-39</td>\n                  <td>45-49</td>\n                  <td>0.979</td>\n                  <td>1674</td>\n                  <td>1743</td>\n                  <td>1706</td>\n                  <td>-69.48  </td>\n                  <td>-0.0415</td>\n                </tr>\n                <tr>\n                  <td>40-44</td>\n                  <td>50-54</td>\n                  <td>0.966</td>\n                  <td>1337</td>\n                  <td>1388</td>\n                  <td>1341</td>\n                  <td>-51.06  </td>\n                  <td>-0.0382</td>\n                </tr>\n                <tr>\n                  <td>45-49</td>\n                  <td>55-59</td>\n                  <td>0.946</td>\n                  <td>1218</td>\n                  <td>1221</td>\n                  <td>1155</td>\n                  <td>-2.54   </td>\n                  <td>-0.0021</td>\n                </tr>\n                <tr>\n                  <td>50-54</td>\n                  <td>60-64</td>\n                  <td>0.921</td>\n                  <td>1326</td>\n                  <td>1281</td>\n                  <td>1180</td>\n                  <td>44.51   </td>\n                  <td>0.0336 </td>\n                </tr>\n                <tr>\n                  <td>55-59</td>\n                  <td>65-69</td>\n                  <td>0.885</td>\n                  <td>1236</td>\n                  <td>1286</td>\n                  <td>1139</td>\n                  <td>-50.28  </td>\n                  <td>-0.0407</td>\n                </tr>\n                <tr>\n                  <td>60-64</td>\n                  <td>70-74</td>\n                  <td>0.827</td>\n                  <td>1127</td>\n                  <td>1151</td>\n                  <td>951 </td>\n                  <td>-23.64  </td>\n                  <td>-0.021 </td>\n                </tr>\n                <tr>\n                  <td>65-69</td>\n                  <td>75-79</td>\n                  <td>0.728</td>\n                  <td>1129</td>\n                  <td>1136</td>\n                  <td>827 </td>\n                  <td>-6.83   </td>\n                  <td>-0.0061</td>\n                </tr>\n                <tr>\n                  <td>70-74</td>\n                  <td>80-84</td>\n                  <td>0.578</td>\n                  <td>895 </td>\n                  <td>943 </td>\n                  <td>545 </td>\n                  <td>-47.58  </td>\n                  <td>-0.0532</td>\n                </tr>\n                <tr>\n                  <td>75+  </td>\n                  <td>85+  </td>\n                  <td>0.552</td>\n                  <td>1089</td>\n                  <td>740 </td>\n                  <td>409 </td>\n                  <td>348.59  </td>\n                  <td>0.3201 </td>\n                </tr>\n        </tbody>\n      </table>\n    </div>\n<!-- hack to avoid NA insertion in last line -->\n```\n\n:::\n:::\n\n\n### projecting the number of females for 2029\n\nTo project the total population in 2029, we just grab the prior census information, birth rates, and calculate net migration rates from 2024 to 2029.\n\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}