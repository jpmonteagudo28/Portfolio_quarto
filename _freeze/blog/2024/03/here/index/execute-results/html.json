{
  "hash": "b221e15590773a13e1726107e12d9d6d",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Don't be an absolutist. Use the `here` package for reproducible workflows\"\ndate: 2024-03-17\ndescription: \"Gentle reminders when using the `here` package for your `RStudio` projects\"\ncategories:\n - r\n - packages\n - here\n - working dir\n - setwd\n - programming\n - code errors\n - workflow\n - reproducibility\nformat:\n  html:\n    code-fold: true\n    code-tools: true\n#doi: 10.59350/bje88-8r592\ncitation: true\n# draft: true\n---\n\n\n\n\n## TL; DR:\n\nDon't be an absolutist– use relative paths. Use the `here` package instead of `setwd()` or `getwd()` to increase reproducibility and avoid wasting your and other people's time.\n\nSince I created this website, I've been coding, writing, and reading a lot more which has unequivocally led to a mountain of new files and the forging of new paths– quite literally:smile:. At first, I kept things pretty organized, but now it's nearly impossible to know where I saved `such_and_such.txt` file without wasting at least 5 minutes of my day.\n\nThis is what I used to do:\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nurl1 <- \"https://somefile_online_data_source_here.com\"\ndownload.file(url1, destfile = \"./data_file_here.zip\")\nunzip(\"data_file_here.zip\", exdir = getwd())\nDat <- readRDS(\"summaryDat.rds\")\nDat2 <- readRDS(\"SummaryDat2.rds\")\n```\n:::\n\n\nThis is fine until it's time to either save or get new files. My directory will be anywhere on my device unless I have previously specified it using `setwd()`, but this strategy will soon be an obstacle to saving new information in an organized and reproducible way. If later on I change my `R` scripts to a different folder the original file path won't work anymore.\n\n## `here` comes the package :file_folder:\n\nThe `here` package allows you to set up a relative path mapped onto your R project directory on every device regardless of your absolute path directory.\n\n### the `here` function\n\nHere you can see what my root directory is and how I'm going up one folder with each iteration of the `here` command.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhere::here()\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project\"\n  here::here(\"blog\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/blog\"\n  here::here(\"2024\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/2024\"\n  here::here(\"02\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/02\"\n  here::here(\"post\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/post\"\n  here::here(\"scripts\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/scripts\"\n```\n:::\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhere::here(\"blog\",\"2024\",\"02\",\"post\",\"scripts\",\"Dat.R\")\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Poroject/blog/2024/02/post/scripts/ind.R\"\n```\n:::\n\n\nI can also go up several folders by calling the full relative path in one single command. However, when I call the `here` function again, it sends me back to my root directory.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhere::here()\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project\"\n```\n:::\n\n\nIt looks like I would use the `here` function to get or write files and not just be there. If I don't need anything from my subdirectory, then `R` will go back to where the `.Rproj` file is located. For example, if I want to save a `.png` file with a series of plots to one of my folders, I can use the `here::here` function to assign the relative path within my save command.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nggsave(\"plots.png\",arranged_plots, \n       path = here::here(\"blog\",\"2024\",\"02\",\"post\",\"img\"),\n                width = 800,\n                height = 600,\n                units = \"px\",\n                dpi = 72)\n```\n:::\n\n\n### the `set_here` function\n\nAnother function available in this package is the `set_here` function which creates a `.here` file anywhere in your project so you can use the directory that contains this file as `root`. This is the description in the function's syntax\n\n> When `here` encounters such a file, it uses the directory that contains this file as root. This is useful if none of the default criteria apply. You need to restart the R session so that `here()` picks up the newly created file.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhere::set_here(\"blog/2024\")\n# Created file .here in C:\\Users\\jpmonteagudo\\Desktop\\R\\Project\\blog\\2024. Please start a new R session in the new project directory.\n```\n:::\n\n\nNext, I start a new `R` session from this new directory, and `RStudio` will automatically set my directory to this folder. I don't need to open the `R` project to reach this new directory. It will give me access to the folder's files and I can then set a relative path to other folders and files.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\nhere::here()\n# [1] \"C:/Users/jpmonteagudo/Desktop/R/Project/blog/2024\"\n```\n:::\n\n\nFrom this new directory, I can reach files anywhere by calling `here::here()` function specifying the location of the file I'd like to get.\n\n### The confusing `i_am` function\n\nThis function has unnecessarily given me a headache. The `here` package is supposed to be a tool that facilitates collaboration and connectivity, but I just couldn't get the `i_am` function to work.\n\nLet's assume my directory is located in the Project folder. The `here` package is going to look for the `.Rproj` file and establish the root directory there.\n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Project/\n#    |__data/\n#    |\t  |____\tsummaryDat.rds\n#    |\t  |____\tsummaryDat2.rds\n#    |__ blog/\n#    |\t  |____\t2024/\n#    |\t\t |_____\t02/\n#    |\t\t\t |____\tpost/\n#    |            |\t\t  |____ index.qmd\n#    |\t\t\t |____\timg/\n#    |              |____pic.png\n#    |__\tscripts/\t    \n#           |____ ind.R\n#\t          |____ cond.R\n\n```\n:::\n\n\nThe `i_am` function will accept a relative path you provide and then establish your document root there. \n\n\n::: {.cell layout-align=\"center\"}\n\n```{.r .cell-code}\n# Include at the top of your script \nhere::i_am(\"02/here/dat2.R\")\n# I'm redirecting all traffic within my document to a folder containing my Dat2.R\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}